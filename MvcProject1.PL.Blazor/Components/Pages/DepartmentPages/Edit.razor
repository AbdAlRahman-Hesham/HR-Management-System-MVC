@page "/department/edit/{id:int}"
@inject IDepartmentRepository _IDepartmentRepository
@inject NavigationManager Navigator

<EditForm Model="Model" OnvalidSubmit="Submit" FormName="depform">
    <DataAnnotationsValidator />


    <InputNumber @bind-Value="Model!.Id" hidden></InputNumber>
    <div>
        <label for="depName">
            Department Name:
            <InputText id="depName" @bind-Value="Model!.Name" class="form-control" />
        </label>
        <ValidationMessage For="@(() => Model.Name)" />
    </div>
    <div>
        <label for="depCode">
            Department Code:
            <InputText id="depCode" @bind-Value="Model!.Code" class="form-control" />
        </label>
        <ValidationMessage For="@(() => Model.Code)" />
    </div>
    <div>
        <label for="depDateC">
            Date of Creation:
            <InputDate id="depDateC" @bind-Value="Model!.DateOfCreation" class="form-control" />
        </label>
        <ValidationMessage For="@(() => Model.DateOfCreation)" />
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Save</button>
        <a class="btn btn-danger" href="/department">Back</a>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Department? Model { get; set; }

    [Parameter]
    public int? id { get; set; }

    protected override void OnInitialized()
    {
        if(id.HasValue){
            var dep = _IDepartmentRepository.Get(id.Value);
            if (dep != null)
            {

                Model ??= dep;
            }
        }
    }

    private void Submit()
    {
        // Ensure the Model is not null before saving.
        if (Model != null)
        {
            _IDepartmentRepository.Update(Model);
            Model = new();
            Navigator.NavigateTo("/department");

        }
    }

}
